% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/esp_get_rivers.R
\name{esp_get_rivers}
\alias{esp_get_rivers}
\title{Get \code{sf} polygon and lines of rivers, channels and other wetlands of Spain}
\source{
IGN data via a custom CDN (see
\url{https://github.com/rOpenSpain/mapSpain/tree/sianedata}).
}
\usage{
esp_get_rivers(
  epsg = "4258",
  cache = TRUE,
  update_cache = FALSE,
  cache_dir = NULL,
  verbose = FALSE,
  resolution = "3",
  spatialtype = "line",
  name = NULL
)
}
\arguments{
\item{epsg}{projection of the map: 4-digit \href{https://epsg.io/}{EPSG code}.
One of:
\itemize{
\item \code{"4258"}: ETRS89
\item \code{"4326"}: WGS84
\item \code{"3035"}: ETRS89 / ETRS-LAEA
\item \code{"3857"}: Pseudo-Mercator
}}

\item{cache}{A logical whether to do caching. Default is \code{TRUE}. See
\strong{About caching}.}

\item{update_cache}{A logical whether to update cache. Default is \code{FALSE}.
When set to \code{TRUE} it would force a fresh download of the source file.}

\item{cache_dir}{A path to a cache directory. See \strong{About caching}.}

\item{verbose}{Logical, displays information. Useful for debugging,
default is \code{FALSE}.}

\item{resolution}{Resolution of the polygon. Values available are
\code{"3"}, \code{"6.5"} or \code{"10"}.}

\item{spatialtype}{Spatial type of the output. Use \code{"area"} for polygons or
\code{"line"} for lines.}

\item{name}{Optional. A character or  \code{\link[base:grep]{regex}} expression
with the name of the element(s) to be extracted.}
}
\value{
A \code{sf} polygon or line object.
}
\description{
Loads a \code{sf} polygon or line object representing rivers, channels,
reservoirs and other wetlands of Spain
}
\details{
Metadata available on
\url{https://github.com/rOpenSpain/mapSpain/tree/sianedata/}.
}
\examples{
\donttest{
# Use of regex

regex1 <- esp_get_rivers(name = "Tajo|Segura")
unique(regex1$rotulo)


regex2 <- esp_get_rivers(name = "Tajo$| Segura")
unique(regex2$rotulo)

# See the diference

# Rivers in Spain
shapeEsp <- esp_get_country(moveCAN = FALSE)

MainRivers <-
  esp_get_rivers(name = "Tajo$|Ebro$|Ebre$|Duero|Guadiana$|Guadalquivir")


library(tmap)

tm_shape(shapeEsp, bbox = MainRivers) +
  tm_borders() +
  tm_shape(MainRivers) +
  tm_lines(col = "skyblue", lwd = 3)


# Wetlands in South-West Andalucia
and <- esp_get_prov(c("Huelva", "Sevilla", "Cadiz"))
Wetlands <- esp_get_rivers(spatialtype = "area")


tm_shape(and) +
  tm_polygons() +
  tm_shape(Wetlands) +
  tm_polygons(col = "skyblue", alpha = 0.5, border.col = "skyblue", lwd = 2)
}
}
\concept{natural}
