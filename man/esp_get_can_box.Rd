% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/esp_get_can_box.R
\name{esp_get_can_box}
\alias{esp_get_can_box}
\alias{esp_get_can_provinces}
\title{Get \code{sf} lines and polygons for insetting the Canary Islands}
\source{
\code{esp_get_can_provinces} extracted from CartoBase ANE,
\code{se89_mult_admin_provcan_l.shp} file.
}
\usage{
esp_get_can_box(style = "right", moveCAN = TRUE, epsg = "4258")

esp_get_can_provinces(moveCAN = TRUE, epsg = "4258")
}
\arguments{
\item{style}{Style of line around Canary Islands. Four options available:
\code{"left"}, \code{"right"}, \code{"box"} or \code{"poly"}.}

\item{moveCAN}{A logical \code{TRUE/FALSE} or a vector of coordinates
\code{c(lat, lon)}. It places the Canary Islands close to Spain's mainland.
Initial position can be adjusted using the vector of coordinates. See
\strong{Displacing the Canary Islands}.}

\item{epsg}{projection of the map: 4-digit \href{https://epsg.io/}{EPSG code}.
One of:
\itemize{
\item \code{"4258"}: ETRS89
\item \code{"4326"}: WGS84
\item \code{"3035"}: ETRS89 / ETRS-LAEA
\item \code{"3857"}: Pseudo-Mercator
}}
}
\value{
A \code{sf} polygon or line depending of \code{style} parameter.

\code{esp_get_can_provinces} returns a \code{LINESTRING} object.
}
\description{
When plotting Spain, it is usual to represent the Canary Islands as an inset
(see \code{moveCAN} on \code{\link[=esp_get_nuts]{esp_get_nuts()}}). These functions provides complementary
lines and polygons to be used when the Canary Islands are displayed
as an inset.
\itemize{
\item \code{\link[=esp_get_can_box]{esp_get_can_box()}} is used to draw lines around the displaced Canary Islands.
}

\itemize{
\item \code{\link[=esp_get_can_provinces]{esp_get_can_provinces()}} is used to draw a separator line between the two
provinces of the Canary Islands.
}
}
\section{Displacing the Canary Islands}{
While \code{moveCAN} is useful for visualization, it would alter the actual
geographic position of the Canary Islands. When using the output for
spatial analysis or using tiles (e.g. with \code{\link[=esp_getTiles]{esp_getTiles()}} or
\code{\link[=addProviderEspTiles]{addProviderEspTiles()}})  this option should be set to \code{FALSE} in order to
get the actual coordinates, instead of the modified ones.
}

\examples{

Provs <- esp_get_prov()
Box <- esp_get_can_box()
Line <- esp_get_can_provinces()

# Plot

library(tmap)


tm_shape(Provs) +
  tm_polygons() +
  tm_shape(Box) +
  tm_lines() +
  tm_shape(Line) +
  tm_lines()
\donttest{
# Displacing Canary

Provs_D <- esp_get_prov(moveCAN = c(15, 0))

Box_D <- esp_get_can_box(style = "left", moveCAN = c(15, 0))

Line_D <- esp_get_can_provinces(moveCAN = c(15, 0))

tm_shape(Provs_D) +
  tm_polygons() +
  tm_shape(Box_D) +
  tm_lines() +
  tm_shape(Line_D) +
  tm_lines()


# Example with poly option

# Get countries with giscoR

library(giscoR)

# Low resolution map
res <- "20"

Countries <-
  gisco_get_countries(
    res = res,
    epsg = "4326",
    country = c("France", "Portugal", "Andorra", "Morocco", "Argelia")
  )
CANbox <-
  esp_get_can_box(
    style = "poly",
    epsg = "4326",
    moveCAN = c(12.5, 0)
  )

CCAA <- esp_get_ccaa(
  res = res,
  epsg = "4326",
  moveCAN = c(12.5, 0) # Same displacement factor)
)

# Plot

tm_shape(Countries, bbox = c(-10, 34.6, 4.3, 44)) +
  tm_polygons(col = "#DFDFDF") +
  tm_shape(CANbox) +
  tm_polygons(col = "#C7E7FB") +
  tm_shape(CANbox) +
  tm_borders(lwd = 2) +
  tm_shape(CCAA) +
  tm_polygons("#FDFBEA") +
  tm_graticules(lines = FALSE) +
  tm_layout(
    bg.color = "#C7E7FB",
    frame.double.line = TRUE
  )
}
}
\seealso{
\code{\link[=esp_get_nuts]{esp_get_nuts()}}, \code{\link[=esp_get_ccaa]{esp_get_ccaa()}}, \code{\link[=esp_get_prov]{esp_get_prov()}}
}
\concept{political}
